<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xianyu</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xianyu02.github.io/"/>
  <updated>2019-07-10T07:24:01.804Z</updated>
  <id>https://xianyu02.github.io/</id>
  
  <author>
    <name>Xianyu233</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GitHub+Hexo搭建个人博客(超详细)</title>
    <link href="https://xianyu02.github.io/2019/06/19/hexo/"/>
    <id>https://xianyu02.github.io/2019/06/19/hexo/</id>
    <published>2019-06-19T04:11:06.000Z</published>
    <updated>2019-07-10T07:24:01.804Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="Node-js官网下载安装并配置Node-js"><a href="#Node-js官网下载安装并配置Node-js" class="headerlink" title="Node.js官网下载安装并配置Node.js"></a><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a>官网下载安装并配置Node.js</h3><p><img src="http://pan.zhiteam.com/IMG/Hexo/GitHub%2BHexo/1.png" alt><br><a href="https://gitforwindows.org/" target="_blank" rel="noopener">Github</a>下载安装Git for windows<br>按照教程安装<a href="https://jingyan.baidu.com/article/a17d528506d7f58098c8f2b0.html" target="_blank" rel="noopener">npm</a></p><h2 id="你需要"><a href="#你需要" class="headerlink" title="你需要"></a>你需要</h2><ul><li><p>有一个github账号，没有的话去注册一个</p></li><li><p>安装了node.js、npm，并了解相关基础知识</p></li><li><p>安装了git for windows(或者其它git客户端)</p></li></ul><h2 id="在Github上新建一个仓库"><a href="#在Github上新建一个仓库" class="headerlink" title="在Github上新建一个仓库"></a>在Github上新建一个仓库</h2><p><img src="http://pan.zhiteam.com/IMG/Hexo/GitHub%2BHexo/2.png" alt></p><ul><li><p>仓库名格式 账户名.github.io</p></li><li><p>我的绑定了自己的域名不用在意</p></li><li><p>在建好的项目右侧有个settings按钮，点击它，向下拉到GitHub Pages，你会看到那边有个网址，访问它，你将会惊奇的发现该项目已经被部署到网络上，能够通过外网来访问它。</p></li></ul><h2 id="安装-amp-部署Hexo"><a href="#安装-amp-部署Hexo" class="headerlink" title="安装&amp;部署Hexo"></a>安装&amp;部署Hexo</h2><h3 id="创建一个文件夹然后cd进去"><a href="#创建一个文件夹然后cd进去" class="headerlink" title="创建一个文件夹然后cd进去"></a>创建一个文件夹然后cd进去</h3><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo -g</span><br><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><h3 id="开始安装Hexo"><a href="#开始安装Hexo" class="headerlink" title="开始安装Hexo"></a>开始安装Hexo</h3><ul><li><p>hexo会自动下载一些文件到这个目录，包括node_modules，目录结构如下：</p></li><li><p>├── .deploy       #需要部署的文件</p></li><li><p>├── node_modules  #Hexo插件</p></li><li><p>├── public        #生成的静态网页文件</p></li><li><p>├── scaffolds     #模板</p></li><li><p>├── source        #博客正文和其他源文件, 404 favicon CNAME 等都应该放在这里</p></li><li><p>|   ├── _drafts   #草稿</p></li><li><p>|   └── _posts    #文章</p></li><li><p>├── themes        #主题</p></li><li><p>├── _config.yml   #全局配置文件</p></li><li><p>└── package.json</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g # 生成</span><br><span class="line">$ hexo s # 启动服务</span><br></pre></td></tr></table></figure><ul><li>按照提示浏览器输入<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 查看生成的本地网页</li></ul><p><img src="http://pan.zhiteam.com/IMG/Hexo/GitHub%2BHexo/yulan.jpg" alt></p><h2 id="连接Github"><a href="#连接Github" class="headerlink" title="连接Github"></a>连接Github</h2><p>设置Git的user name和email</p><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br></pre></td></tr></table></figure><h3 id="看看有没有之前生成的ssh密钥"><a href="#看看有没有之前生成的ssh密钥" class="headerlink" title="看看有没有之前生成的ssh密钥"></a>看看有没有之前生成的ssh密钥</h3><p>如果提示：No such file or directory 说明你是第一次使用git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;邮件地址&quot;</span><br></pre></td></tr></table></figure><p><img src="http://pan.zhiteam.com/IMG/Hexo/GitHub%2BHexo/4.png" alt></p><p>!!! 一定要输入注册Github账号的邮箱 !!!</p><p>然后连续3次回车，最终会生成一个文件在用户目录下<br>打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，</p><p><img src="http://pan.zhiteam.com/IMG/Hexo/GitHub%2BHexo/5.png" alt></p><p>打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key</p><p><img src="http://pan.zhiteam.com/IMG/Hexo/GitHub%2BHexo/6.png" alt></p><h3 id="linux小白可以使用"><a href="#linux小白可以使用" class="headerlink" title="linux小白可以使用"></a>linux小白可以使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh\id_rsa.pub</span><br></pre></td></tr></table></figure><ul><li>查看id_rsa.pub里的内容</li></ul><h3 id="测试是否成功"><a href="#测试是否成功" class="headerlink" title="测试是否成功"></a>测试是否成功</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com # 注意邮箱地址不用改</span><br></pre></td></tr></table></figure><ul><li><p>如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：</p></li><li><p>Hi XXX! You’ve successfully authenticated, but GitHub does not provide shell access.</p></li></ul><h4 id="接下来还要配置"><a href="#接下来还要配置" class="headerlink" title="接下来还要配置:"></a>接下来还要配置:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;xxx&quot;    //你的github用户名，非昵称</span><br><span class="line">git config --global user.email  &quot;xxx@qq.com&quot; //填写你的github注册邮箱</span><br></pre></td></tr></table></figure><p><img src="http://pan.zhiteam.com/IMG/Hexo/GitHub%2BHexo/7.png" alt><br><img src="http://pan.zhiteam.com/IMG/Hexo/GitHub%2BHexo/8.png" alt></p><h3 id="发送到github仓库"><a href="#发送到github仓库" class="headerlink" title="发送到github仓库"></a>发送到github仓库</h3><ul><li><p>上传到github<br>如果你一切都配置好了，发布上传很容易，一句hexo d就搞定，当然关键还是你要把所有东西配置好。</p></li><li><p>首先，ssh key肯定要配置好。</p></li><li><p>其次，配置_config.yml中有关deploy的部分：</p></li></ul><p>正确写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:liuxianan/liuxianan.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>但是第一次会出error：git<br>那我们就还要装一个插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>一般流程就是hexo g-&gt;hexo d</p><p>最终效果<br>可以访问我的git博客来查看效果: <a href="https://xianyu02.github.io/">https://xianyu02.github.io/</a> 也就是这个网站啦</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;h3 id=&quot;Node-js官网下载安装并配置Node-js&quot;&gt;&lt;a href=&quot;#Node-js官网下载安装并配置Node-j
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Centos搭建我的世界PE服务器</title>
    <link href="https://xianyu02.github.io/2019/06/19/1/"/>
    <id>https://xianyu02.github.io/2019/06/19/1/</id>
    <published>2019-06-19T03:58:05.000Z</published>
    <updated>2019-06-19T04:06:34.119Z</updated>
    
    <content type="html"><![CDATA[<h4 id="第一步，切换到root用并安装wget和screen软件包，然后进入screen环境中"><a href="#第一步，切换到root用并安装wget和screen软件包，然后进入screen环境中" class="headerlink" title="第一步，切换到root用并安装wget和screen软件包，然后进入screen环境中"></a>第一步，切换到root用并安装wget和screen软件包，然后进入screen环境中</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line">apt install wget screen -y</span><br><span class="line">screen</span><br></pre></td></tr></table></figure><h4 id="第二步：创建-data-mcpe文件夹，下载服务端执行文件并给予可执行权限。"><a href="#第二步：创建-data-mcpe文件夹，下载服务端执行文件并给予可执行权限。" class="headerlink" title="第二步：创建/data/mcpe文件夹，下载服务端执行文件并给予可执行权限。"></a>第二步：创建/data/mcpe文件夹，下载服务端执行文件并给予可执行权限。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data/mcpe</span><br><span class="line">cd /data/mcpe</span><br><span class="line">wget https://cuncu-1252309123.cos.ap-chengdu.myqcloud.com/mcpeserver</span><br><span class="line">chmod +x mcpeserver</span><br></pre></td></tr></table></figure><h4 id="第三步：下载x86版我的世界安装包（只适用于服务端）"><a href="#第三步：下载x86版我的世界安装包（只适用于服务端）" class="headerlink" title="第三步：下载x86版我的世界安装包（只适用于服务端）"></a>第三步：下载x86版我的世界安装包（只适用于服务端）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O minecraft.apk https://cuncu-1252309123.cos.ap-chengdu.myqcloud.com/mc1.5.2x86.apk</span><br></pre></td></tr></table></figure><h4 id="第四步：补全文件并解压安装包"><a href="#第四步：补全文件并解压安装包" class="headerlink" title="第四步：补全文件并解压安装包"></a>第四步：补全文件并解压安装包</h4><p>wget <a href="https://cuncu-1252309123.cos.ap-chengdu.myqcloud.com/bin.tar.gz" target="_blank" rel="noopener">https://cuncu-1252309123.cos.ap-chengdu.myqcloud.com/bin.tar.gz</a><br>tar -zxvf bin.tar.gz<br>./mcpeserver unpack</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#### 第五步：运行</span><br></pre></td></tr></table></figure><p>./mcpeserver run<br>```出现 ‘I [Bridge] Server initialized’ 说明服务器启动成功</p><p>输入 ‘:quit’或者按Ctrl+C关闭服务端，然后编辑对应文件，这些文件一眼就能看出哪个是哪个，不需要我多说<br>此时你就可以去游戏客户端内添加个服务器了，IP，端口19132</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;第一步，切换到root用并安装wget和screen软件包，然后进入screen环境中&quot;&gt;&lt;a href=&quot;#第一步，切换到root用并安装wget和screen软件包，然后进入screen环境中&quot; class=&quot;headerlink&quot; title=&quot;第一步，切换
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://xianyu02.github.io/2019/06/19/hello-world/"/>
    <id>https://xianyu02.github.io/2019/06/19/hello-world/</id>
    <published>2019-06-19T03:49:35.370Z</published>
    <updated>2019-06-19T03:49:35.370Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
